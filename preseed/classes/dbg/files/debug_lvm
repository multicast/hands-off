#!/bin/sh
# debug_lvm of dbg class from http://hands.com/d-i/.../classes/dbg/files/debug_lvm
#
# Copyright (c) 2011-2014 Hands.com Ltd
# distributed under the terms of the GNU GPL version 2 or (at your option) any later version
# see the file "COPYING" for details
#


# if you add this to d-i's kernel command line:  url=hands.com classes=dbg
# then this script will be downloaded, and dropped into the background.

# define some useful debugging functions
. /tmp/HandsOff-dbg-fn.sh

# with some examples of their use:

#add_sleep /bin/autopartition-lvm
#add_x /bin/autopartition-lvm
#add_sleep_fn /lib/partman/lib/lvm-base.sh pv_on_device
#add_sleep_fn /lib/partman/lib/lvm-base.sh lvm_get_info
#add_sleep_fn /lib/partman/lib/lvm-base.sh pv_on_device

# In this example, I'm patching one of the partman-lvm files, when it turns up
# to allow me to test a bug fix -- obviously, that won't work once the bug is
# fixed, but it shows the idea
 
# the wait_for is needed since the lvm udeb is not unpacked during the
# early script, so we need to wait for it to turn up before it can be edited.

wait_for /lib/partman/lib/auto-lvm.sh
sed -i "/open_dialog COMMIT/,\${/close_dialog/s#\$#\n  sleep 10\n  pvs --all > /dev/null\n  device_remove_lvm \$dev#}" /lib/partman/lib/auto-lvm.sh

# and some more examples:

#top_and_tail /lib/partman/lib/lvm-base.sh
#top_and_tail /lib/partman/lib/lvm-remove.sh
